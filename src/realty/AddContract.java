/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package realty;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Вадим
 */
public class AddContract extends javax.swing.JFrame {

    /**
     * Creates new form AddContract
     */
    public AddContract() {
       
        initComponents();
//        FillClientsLname();
//        FillRealterLname();
//        FillStreet();
//        FillOperation();
        jLabelErr.setVisible(false);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("realty?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        clientsQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Clients c");
        clientsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clientsQuery.getResultList();
        jComboClientsFname = new javax.swing.JComboBox();
        jComboOperation = new javax.swing.JComboBox();
        jComboRealterFname = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboClientsLname = new javax.swing.JComboBox();
        jComboClientsMname = new javax.swing.JComboBox();
        jComboClientsPassport = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboRealterLname = new javax.swing.JComboBox();
        jComboRealterMname = new javax.swing.JComboBox();
        jComboRealterPassport = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboRealtyStreet = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jComboRealtyHouse = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jComboRealtyFlat = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jTextYear = new javax.swing.JTextField();
        jTextMonth = new javax.swing.JTextField();
        jTextDay = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButtonApply = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelErr = new javax.swing.JLabel();
        jTextCost = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jComboClientsFname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboClientsFnameItemStateChanged(evt);
            }
        });

        jComboRealterFname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealterFnameItemStateChanged(evt);
            }
        });

        jLabel1.setText("Дані клієнта");

        jLabel2.setText("ПІБ клієнта");

        jComboClientsLname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboClientsLnameItemStateChanged(evt);
            }
        });

        jComboClientsMname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboClientsMnameItemStateChanged(evt);
            }
        });

        jLabel3.setText("Номер пастпорту");

        jLabel4.setText("Дані ріелтора");

        jLabel5.setText("ПІБ ріелтора");

        jComboRealterLname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealterLnameItemStateChanged(evt);
            }
        });

        jComboRealterMname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealterMnameItemStateChanged(evt);
            }
        });

        jLabel6.setText("Номер пастпорту");

        jLabel7.setText("Нерухомість");

        jComboRealtyStreet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealtyStreetItemStateChanged(evt);
            }
        });

        jLabel8.setText("Вулиця");

        jComboRealtyHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealtyHouseItemStateChanged(evt);
            }
        });

        jLabel9.setText("Будинок");

        jComboRealtyFlat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboRealtyFlatItemStateChanged(evt);
            }
        });

        jLabel10.setText("Кв");

        jLabel11.setText("рррр/мм/дд");

        jLabel12.setText("Дата закінчення контракту");

        jButtonApply.setText("Підтвердити");
        jButtonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApplyActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabelErr.setBackground(new java.awt.Color(204, 204, 204));
        jLabelErr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelErr.setText("Error");
        jLabelErr.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelErr)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelErr))
        );

        jLabel13.setText("Вартість");

        jLabel14.setText("грн.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboClientsLname, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboClientsFname, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboClientsMname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(85, 85, 85))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jComboClientsPassport, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboRealterLname, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboRealterFname, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboRealterMname, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jComboRealterPassport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboRealtyStreet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel8)
                                        .addGap(43, 43, 43)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jComboRealtyHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(12, 12, 12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jComboRealtyFlat, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(186, 186, 186)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(jTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(jComboOperation, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextCost, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel14)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addGap(141, 141, 141))))))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonApply)
                .addGap(68, 68, 68)
                .addComponent(jLabel11)
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboClientsFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboClientsLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboClientsMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboClientsPassport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboRealterFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRealterLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRealterMname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRealterPassport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10)
                        .addComponent(jLabel13))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboRealtyStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRealtyHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRealtyFlat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboOperation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(33, 33, 33)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jButtonApply))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboClientsLnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboClientsLnameItemStateChanged
         java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.clients where lname='"+jComboClientsLname.getSelectedItem().toString()+"' group by lname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboClientsFname.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("fname");
            jComboClientsFname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboClientsLnameItemStateChanged

    private void jComboClientsMnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboClientsMnameItemStateChanged
       java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.clients where lname='"+jComboClientsLname.getSelectedItem().toString()+"' and fname='"+jComboClientsFname.getSelectedItem().toString()+"' "
                +"and mname='"+jComboClientsMname.getSelectedItem().toString()+"' group by mname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboClientsPassport.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("pas_number");
            jComboClientsPassport.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboClientsMnameItemStateChanged

    private void jComboClientsFnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboClientsFnameItemStateChanged
            java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.clients where lname='"+jComboClientsLname.getSelectedItem().toString()+"' and fname='"+jComboClientsFname.getSelectedItem().toString()+"' group by mname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboClientsMname.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("mname");
            jComboClientsMname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboClientsFnameItemStateChanged

    private void jComboRealterLnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealterLnameItemStateChanged
          java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realter where lname='"+jComboRealterLname.getSelectedItem().toString()+"' group by lname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealterFname.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("fname");
            jComboRealterFname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboRealterLnameItemStateChanged

    private void jComboRealterFnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealterFnameItemStateChanged
             java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realter where lname='"+jComboRealterLname.getSelectedItem().toString()+"' and fname='"+jComboRealterFname.getSelectedItem().toString()+"' group by mname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealterMname.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("mname");
            jComboRealterMname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboRealterFnameItemStateChanged

    private void jComboRealterMnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealterMnameItemStateChanged
       java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realter where lname='"+jComboRealterLname.getSelectedItem().toString()+"' and fname='"+jComboRealterFname.getSelectedItem().toString()+"' "
                +"and mname='"+jComboRealterMname.getSelectedItem().toString()+"' group by mname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealterPassport.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("pas_number");
            jComboRealterPassport.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboRealterMnameItemStateChanged

    private void jComboRealtyStreetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealtyStreetItemStateChanged
       java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select house from realty.realty where street='"+jComboRealtyStreet.getSelectedItem().toString()+"' group by street";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealtyHouse.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("house");
            jComboRealtyHouse.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboRealtyStreetItemStateChanged

    private void jComboRealtyHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealtyHouseItemStateChanged
       java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realty where street='"+jComboRealtyStreet.getSelectedItem().toString()+"'and house='"
                +jComboRealtyHouse.getSelectedItem().toString()+"' group by flat";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealtyFlat.removeAllItems();
        
        while(rs.next()){
            String name = rs.getString("flat");
            jComboRealtyFlat.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    }//GEN-LAST:event_jComboRealtyHouseItemStateChanged

     public static int getCurrentYear()
    {
        java.util.Calendar calendar = java.util.Calendar.getInstance(java.util.TimeZone.getDefault(), java.util.Locale.getDefault());
        calendar.setTime(new java.util.Date());
        return calendar.get(java.util.Calendar.YEAR);
    }
    

    
    private void jButtonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApplyActionPerformed
    boolean flagErr = false;
    jLabelErr.setVisible(false);
    jLabel11.setForeground(Color.black);
    jLabel13.setForeground(Color.black);
    Integer year = null,month = null,day = null;
    if(checkString(jTextYear.getText())){
        year = Integer.valueOf(jTextYear.getText());
    }else{
        jLabel11.setForeground(Color.red);
        flagErr = true;
    }
   if(year<=getCurrentYear()){
       jLabel11.setForeground(Color.red);
       flagErr = true;
   }
   
   
   if(checkString(jTextMonth.getText())){
        month = Integer.valueOf(jTextMonth.getText());
    }else{
        jLabel11.setForeground(Color.red);
        flagErr = true;
    }
   if((month<1) || (month>12)){
       jLabel11.setForeground(Color.red);
       flagErr = true; 
    }
   day = Integer.valueOf(jTextDay.getText());
   if(day<1 || day >31){
       jLabel11.setForeground(Color.red);
       flagErr = true;
   }
  
  if(day<1 || day>31){
      jLabel11.setForeground(Color.red);
       flagErr = true;
  }
   
   
   
   
      if(flagErr){
         jLabelErr.setText("Невірна дата!!");
         jLabelErr.setVisible(true);
         return;
   }
   
      
      if(!checkString(jTextCost.getText())){
          jLabel13.setForeground(Color.red);
          jLabelErr.setText("Помилка у полі Вартість");
          jLabelErr.setVisible(true);
          return;
    }
      
    //-------------------------------Adding------------------------------//
      int id_clients = 0, id_operation = 0, id_realter = 0, id_realty = 0;
      
      //-------------------------id_Clients--------------------------
       java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select id from realty.clients where pas_number='"+jComboClientsPassport.getSelectedItem().toString()+"'";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            String name = rs.getString("id");
            id_clients = Integer.parseInt(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
    
    //-------------------------id_opearation-------------

    
    try{
        String sql="select id from realty.operations where name_op='"+jComboOperation.getSelectedItem().toString()+"'";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            String name = rs.getString("id");
            id_operation = Integer.parseInt(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
      
   //-----------------------------id_realter---------------------
   
    
    try{
        String sql="select id from realty.realter where pas_number='"+jComboRealterPassport.getSelectedItem().toString()+"'";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            String name = rs.getString("id");
            id_realter = Integer.parseInt(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }  
    
    
    //------------------------id_realty----------------------
         
   
    
   
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
    
    try{
       
        String sql="select id from realty.realty where street='"+jComboRealtyStreet.getSelectedItem().toString()+"'and house='"
                +jComboRealtyHouse.getSelectedItem().toString()+"'and flat='"+jComboRealtyFlat.getSelectedItem().toString()+"'";
       // String sql="select id from realty.realty where street='mid' and house='3' and flat='4'";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            String name = rs.getString("id");
            id_realty = Integer.parseInt(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
      
      
      
      
      
       
        
        String query;
        
        
        

        
        
        
        
        
        
        
        
        try{
            stmt = con.createStatement();
            
            query = "INSERT INTO realty.contract(cost, id_clients, id_operation, id_realter, id_realty, data_start,data_end) VALUES('"+
                   jTextCost.getText()+"',"+id_clients+","+id_operation+","+id_realter+
                   ","+id_realty+",curdate(),'"+jTextYear.getText()+"-"+jTextMonth.getText()+"-"+jTextDay.getText()+"')";
            stmt.executeUpdate(query);
            
            
            
        }catch(Exception ex){
            System.out.println("Erro "+ex);
        }
    
        
    
      

   
   
   
   
   
   
   
   


        
        
        
        
        
        
        
        
        
//        java.sql.Connection con = null;
//        try{
//            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
//        }catch(Exception e){
//            System.out.println("No Connecntion");
//        }
//        java.sql.Statement stmt;
//    
//    try{
//        String sql="select * from realty.realty where street='"+jComboRealtyStreet.getSelectedItem().toString()+"'and house='"
//                +jComboRealtyHouse.getSelectedItem().toString()+"' group by flat";
//        stmt=con.prepareStatement(sql);
//        ResultSet rs = stmt.executeQuery(sql);
//        jComboRealtyFlat.removeAllItems();
//        while(rs.next()){
//            String name = rs.getString("flat");
//            jComboRealtyFlat.addItem(name);
//        }
//        stmt.close();
//    }catch(Exception ex){
//        System.out.println("Erro "+ex);
//    }
    }//GEN-LAST:event_jButtonApplyActionPerformed

    private void jComboRealtyFlatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboRealtyFlatItemStateChanged
    java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realty where street='"+jComboRealtyStreet.getSelectedItem().toString()+"' and house='"+jComboRealtyHouse.getSelectedItem().toString()
                +"' and flat='"+jComboRealtyFlat.getSelectedItem().toString()+"'";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        
        while(rs.next()){
            String name = rs.getString("cost");
            jTextCost.setText(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }

    }//GEN-LAST:event_jComboRealtyFlatItemStateChanged

    private boolean checkString(String string) {
        try {
            Integer.parseInt(string);
        } catch (Exception e) {
            return false;
        }
        return true;
    }
    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddContract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddContract().setVisible(true);
//            }
//        });
//    }
    

    

    void FillClientsLname(){
        
        java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.clients  group by lname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboClientsLname.removeAllItems();
        while(rs.next()){
            String name = rs.getString("lname");
            jComboClientsLname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
}
    
        
    void FillRealterLname(){
        
        java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realter  group by lname";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealterLname.removeAllItems();
        while(rs.next()){
            String name = rs.getString("lname");
            jComboRealterLname.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
}
    
    
    void FillStreet(){
        
        java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.realty  group by street";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboRealtyStreet.removeAllItems();
        while(rs.next()){
            String name = rs.getString("street");
            jComboRealtyStreet.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
}
    
    
    void FillOperation(){
        
        java.sql.Connection con = null;
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root","");
        }catch(Exception e){
            System.out.println("No Connecntion");
        }
        java.sql.Statement stmt;
    
    try{
        String sql="select * from realty.operations";
        stmt=con.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery(sql);
        jComboOperation.removeAllItems();
        while(rs.next()){
            String name = rs.getString("name_op");
            jComboOperation.addItem(name);
        }
        stmt.close();
    }catch(Exception ex){
        System.out.println("Erro "+ex);
    }
}
    

    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<realty.Clients> clientsList;
    private javax.persistence.Query clientsQuery;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButtonApply;
    private javax.swing.JComboBox jComboClientsFname;
    private javax.swing.JComboBox jComboClientsLname;
    private javax.swing.JComboBox jComboClientsMname;
    private javax.swing.JComboBox jComboClientsPassport;
    private javax.swing.JComboBox jComboOperation;
    private javax.swing.JComboBox jComboRealterFname;
    private javax.swing.JComboBox jComboRealterLname;
    private javax.swing.JComboBox jComboRealterMname;
    private javax.swing.JComboBox jComboRealterPassport;
    private javax.swing.JComboBox jComboRealtyFlat;
    private javax.swing.JComboBox jComboRealtyHouse;
    private javax.swing.JComboBox jComboRealtyStreet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelErr;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextCost;
    private javax.swing.JTextField jTextDay;
    private javax.swing.JTextField jTextMonth;
    private javax.swing.JTextField jTextYear;
    // End of variables declaration//GEN-END:variables
}
